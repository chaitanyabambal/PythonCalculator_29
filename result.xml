<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="2" tests="16" time="0.182" timestamp="2022-03-29T16:59:23.846835" hostname="LAPTOP-VOG4M7D9"><testcase classname="test_calculator" name="test_add[3-2-5]" time="0.002" /><testcase classname="test_calculator" name="test_add[10-12-15]" time="0.001"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_calculator" name="test_add[2-5-8]" time="0.001"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_calculator" name="test_add[7-8-15]" time="0.001" /><testcase classname="test_calculator" name="test_sub[7-2-5]" time="0.001" /><testcase classname="test_calculator" name="test_sub[27-12-15]" time="0.001" /><testcase classname="test_calculator" name="test_sub[13-5-8]" time="0.001" /><testcase classname="test_calculator" name="test_sub[7-8-15]" time="0.001"><failure message="assert 15 == -1">a = 7, b = 8, c = 15

    @pytest.mark.parametrize("a,b,c",[(7,2,5),(27,12,15),(13,5,8),(7,8,15)])
    def test_sub(a,b,c):
        result=calculator.sub(a,b)
&gt;       assert c==result
E       assert 15 == -1

test_calculator.py:14: AssertionError</failure></testcase><testcase classname="test_calculator" name="test_mult[1-2-2]" time="0.001"><failure message="assert 2 == 3">a = 1, b = 2, c = 2

    @pytest.mark.parametrize("a,b,c",[(1,2,2),(3,4,12),(11,12,23),(2,7,9)])
    def test_mult(a,b,c):
        result=calculator.mult(a,b)
&gt;       assert c==result
E       assert 2 == 3

test_calculator.py:19: AssertionError</failure></testcase><testcase classname="test_calculator" name="test_mult[3-4-12]" time="0.001"><failure message="assert 12 == 7">a = 3, b = 4, c = 12

    @pytest.mark.parametrize("a,b,c",[(1,2,2),(3,4,12),(11,12,23),(2,7,9)])
    def test_mult(a,b,c):
        result=calculator.mult(a,b)
&gt;       assert c==result
E       assert 12 == 7

test_calculator.py:19: AssertionError</failure></testcase><testcase classname="test_calculator" name="test_mult[11-12-23]" time="0.001" /><testcase classname="test_calculator" name="test_mult[2-7-9]" time="0.001" /><testcase classname="test_calculator" name="test_div[10-5-2]" time="0.001" /><testcase classname="test_calculator" name="test_div[5-2-2.5]" time="0.001" /><testcase classname="test_calculator" name="test_div[70-2-35]" time="0.001" /><testcase classname="test_calculator" name="test_div[10-3-5]" time="0.001"><failure message="assert 5 == 3.3333333333333335">a = 10, b = 3, c = 5

    @pytest.mark.parametrize("a,b,c",[(10,5,2),(5,2,2.5),(70,2,35),(10,3,5)])
    def test_div(a,b,c):
        result=calculator.div(a,b)
&gt;       assert c==result
E       assert 5 == 3.3333333333333335

test_calculator.py:24: AssertionError</failure></testcase></testsuite></testsuites>